<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.1.xsd
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task-3.0.xsd"> 

	<!-- 对包中的所有类进行扫描,以完成Bean创建和自动依赖注入的功能 -->
	<!-- 自动扫描组件，要把controller去除，他们是在spring-mvc.xml中配置，如果不去除会影响事务管理。 -->
	<context:component-scan base-package="com.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<context:property-placeholder location="classpath*:wl-db.properties" ignore-unresolvable="true" />


	 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!--驱动名称-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!--访问地址-->
        <property name="url" value="${jdbc.url}"/>
        <!--用户名-->
        <property name="username" value="${jdbc.username}"/>
        <!--密码-->
        <property name="password" value="${jdbc.password}"/>
        <!--初始大小-->
        <property name="initialSize" value="2"/>
        <!--最大连接池数量-->
        <property name="maxActive" value="40"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="2"/>
        <!--获取连接时最大等待时间，单位毫秒。-->
        <property name="maxWait" value="15000"/>
        <!--用来检测连接是否有效的sql，要求是一个查询语句。-->
        <property name="validationQuery" value="select 1"/>
        <!--申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。-->
        <property name="testOnBorrow" value="false"/>
        <!--建议配置为true，不影响性能，并且保证安全性。-->
        <property name="testWhileIdle" value="true"/>
        <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="120000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!--对于长时间不使用的连接强制关闭  -->
        <property name="removeAbandoned" value="true"/>
        <!--超过30分钟开始关闭空闲连接(秒为单位)  -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!--将当前关闭动作记录到日志-->
        <property name="logAbandoned" value="true"/>
        <!--自动提交,如果不启用事物可设置为true -->
        <property name="defaultAutoCommit" value="false"/>
        <property name="connectionInitSqls" value="set names utf8;"/>
    </bean>

	
	
	

    

    


	<!-- mybatis配置开始 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeHandlersPackage" value="com.winit.mybatisHandler"></property>
		 <property name="mapperLocations" >
            <array>
                <value>classpath:mapper/*.xml</value>
            </array>
        </property>
        <property name="plugins">
			<array>
				<!-- 分页插件
					rowBoundsWithCount：使用 RowBounds、PageRowBounds作为分页参数时，自动计算总数
					supportMethodsArguments：支持通过 Mapper 接口参数来传递分页参数
					params：为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值
				 	
				 	
				 	以下两个情况，且这两个参数都不为空时，插件会自动分页，并计算出总数
				 	1、当 Mapper 方法含 @Param("pageNum")、@Param("pageSize")参数
				 	2、当 Mapper 方法含 com.github.pagehelper.PageRowBounds 参数
				 -->
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							helperDialect=mysql
							rowBoundsWithCount=true
							offsetAsPageNum=true
							supportMethodsArguments=true
							params=pageNum=pageNum;pageSize=pageSize;
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.winit.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property> 
        <property name="properties">
			<value>
				mappers=com.winit.common.baseclass.MyMapper
				
				ORDER=BEFORE
			</value>
		</property> 
    </bean>  
    <!-- mybatis 事务配置 -->
    <!-- 事务管理器 -->  
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	    <property name="dataSource" ref="dataSource" />  
	</bean>  
	  
	<!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->  
	<tx:annotation-driven transaction-manager="txManager" />  
	<!-- mybatis配置结束 -->

  
</beans>